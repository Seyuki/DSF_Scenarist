<metro:MetroWindow x:Class="DSF_Scenarist.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:DSF_Scenarist"
        xmlns:conv="clr-namespace:DSF_Scenarist.Classes.Converters"
        xmlns:vm="clr-namespace:DSF_Scenarist.Classes.ViewModels"
        xmlns:views="clr-namespace:DSF_Scenarist.Views"
        xmlns:subviews="clr-namespace:DSF_Scenarist.Views.SubViews"
        mc:Ignorable="d"
        TitleCaps="False"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        GlowBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        ShowIconOnTitleBar="True"
        UseLayoutRounding="True"
        WindowStartupLocation="CenterScreen" Height="720" Width="1280" Icon="Resources/icon.ico"
        Closing="AppClosing" Drop="AppDrop" DragEnter="AppDragEnter" AllowDrop="True">

    <!--Ressources de la fenêtre-->
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <!--ContextMenus-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/TreeViewContextMenusDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--Converters-->
            <conv:ShortenNameConverter x:Key="ShortenNameConverter"/>
            <conv:WindowTitleConverter x:Key="WindowTitleConverter"/>
            <conv:VisibilityConverter x:Key="VisibilityConverter"/>
            <conv:CollectionCountConverter x:Key="CollectionCountConverter"/>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <!--ViewModel-->
    <metro:MetroWindow.DataContext>
        <vm:MainViewModel/>
    </metro:MetroWindow.DataContext>

    <!--Titre de la fenêtre-->
    <Window.Title>
        <Binding Path="Scenario" Converter="{StaticResource WindowTitleConverter}" StringFormat="{}DSF Scenarist{0}"/>
    </Window.Title>
    
    <!--Evenements-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding AppLoadedCmd}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--Raccourcis clavier-->
    <metro:MetroWindow.InputBindings>
        <KeyBinding Modifiers="Control" Key="N" Command="{Binding NewCmd}"/>
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenCmd}"/>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCmd}"/>
        <KeyBinding Modifiers="Control+Alt" Key="S" Command="{Binding SaveAsCmd}"/>
    </metro:MetroWindow.InputBindings>

    <!--UI-->
    <materialDesign:DialogHost Identifier="RootDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/> <!--TreeView-->
                <ColumnDefinition Width="Auto"/> <!--Splitter-->
                <ColumnDefinition Width="*"/> <!--Contenu-->
            </Grid.ColumnDefinitions>

            <!--Menu-->
            <subviews:ScenarioMenu Grid.Row="0" Grid.Column="0"/>

            <!--TreeView-->
            <TreeView x:Name="TreeView_Story" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Scenario.Paths}">
                <!--Raccourcis clavier-->
                <TreeView.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding DeleteSelectedCmd}" CommandParameter="{Binding Path=SelectedItem, ElementName=TreeView_Story}"/>
                </TreeView.InputBindings>
                
                <!--Affichage des éléments-->
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Name}">
                            <materialDesign:PackIcon Kind="{Binding Icon}" Margin="0 0 5 0"/>
                            <TextBlock Text="{Binding Path=Name, Converter={StaticResource ShortenNameConverter}}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

                <!--Style des éléments, en fonction de leur flag Selected ou Expanded-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="ContextMenu" Value="{Binding ItemMenu}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>

                        <!--Style si l'élément a été modifié-->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChanged}" Value="True">
                                <Setter Property="Foreground" Value="Orange"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <!--Bouton d'ajout-->
            <Button Grid.Row="1" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 10 11" HorizontalAlignment="Right" VerticalAlignment="Bottom" ToolTip="Ajouter un path" Command="{Binding Scenario.AddChildCmd}" Visibility="{Binding Path=IsScenario, Converter={StaticResource VisibilityConverter}}">
                <materialDesign:PackIcon Kind="Plus" Height="24" Width="24" />
            </Button>

            <!--Splitter-->
            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="3" HorizontalAlignment="Stretch"/>
            
            <!--Barre de titre pour le contenu-->
            <StackPanel Grid.Column="2" Grid.Row="0" Background="{DynamicResource AccentColorBrush}" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem, ElementName=TreeView_Story, Converter={StaticResource VisibilityConverter}}">
                <materialDesign:PackIcon Kind="{Binding Path=SelectedItem.Icon, ElementName=TreeView_Story}" Margin="20 0" Height="22" Width="22" VerticalAlignment="Center"/>
                <TextBlock FontSize="22" FontWeight="Medium" Text="{Binding Path=SelectedItem.Name, ElementName=TreeView_Story}" VerticalAlignment="Center"/>
            </StackPanel>
            
            <!--Contenu-->
            <ContentControl Grid.Row="1" Grid.Column="2" Content="{Binding Path=SelectedItem.View, ElementName=TreeView_Story}"/>
        </Grid>
        
    </materialDesign:DialogHost>
</metro:MetroWindow>
